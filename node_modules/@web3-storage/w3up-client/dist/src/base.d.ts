export class Base {
    /**
     * @param {import('@web3-storage/access').AgentData} agentData
     * @param {object} [options]
     * @param {import('./types').ServiceConf} [options.serviceConf]
     */
    constructor(agentData: import('@web3-storage/access').AgentData, options?: {
        serviceConf?: import("./types").ServiceConf | undefined;
    } | undefined);
    /**
     * @type {Agent}
     * @protected
     */
    protected _agent: Agent;
    /**
     * @type {import('./types').ServiceConf}
     * @protected
     */
    protected _serviceConf: import('./types').ServiceConf;
    /**
     * @protected
     * @param {import('./types').Ability[]} abilities
     */
    protected _invocationConfig(abilities: import('./types').Ability[]): Promise<{
        issuer: import("@ucanto/interface").Signer<`did:key:${string}`, import("@ucanto/interface").SigAlg>;
        with: `did:key:${string}`;
        proofs: import("@ucanto/interface").Delegation<import("@ipld/dag-ucan/dist/src/ucan.js").Capabilities>[];
        audience: import("@ipld/dag-ucan/dist/src/ucan.js").Principal<`did:${string}:${string}`>;
    }>;
}
import { Agent } from "@web3-storage/access/agent";
//# sourceMappingURL=base.d.ts.map